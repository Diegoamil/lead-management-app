// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lead {
  id        String   @id @default(uuid())
  name      String
  phone     String
  imageUrl  String?
  source    String
  stage     String
  status    String
  interest  String
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  sellerId  String?
  seller    Seller?  @relation(fields: [sellerId], references: [id])
  companyId String?
  company   Company? @relation(fields: [companyId], references: [id])
}

model Car {
  id        String   @id @default(uuid())
  model     String
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  companyId String?
  company   Company? @relation(fields: [companyId], references: [id])
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  phone         String
  password      String
  role          String    @default("user") // admin, manager, user
  lastLogin     DateTime?
  active        Boolean   @default(true)
  rememberToken String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relacionamentos
  companyId String?
  company   Company? @relation(fields: [companyId], references: [id])
}

model Company {
  id        String   @id @default(uuid())
  name      String
  cnpj      String?  @unique
  address   String
  phone     String
  email     String?
  logo      String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  users   User[]
  sellers Seller[]
  leads   Lead[]
  cars    Car[]
}

model Seller {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  phone     String
  role      String?
  avatar    String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  companyId String
  company   Company @relation(fields: [companyId], references: [id])
  leads     Lead[]
}
